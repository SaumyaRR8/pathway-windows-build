[package]
name = "pathway"
version = "0.13.0"
edition = "2021"
publish = false
rust-version = "1.77"
license = "BUSL-1.1"

[lib]
name = "pathway_engine"
crate-type = ["cdylib", "lib"]
test = false
doctest = false

[dev-dependencies]
assert_matches = "1.5.0"
eyre = "0.6.12"

[dependencies]
arc-swap = "1.7.1"
arcstr = { version = "1.1.5", default-features = false, features = ["serde", "std"] }
base32 = "0.4.0"
bincode = "1.3.3"
bitflags = { version = "2.5.0", features = ["std"] } # Hack to keep features unified between normal and dev deps
bytes = "1.6.0"
cached = "0.51.3"
cfg-if = "1.0.0"
chrono = { version = "0.4.38", features = ["std", "clock"], default-features = false }
chrono-tz = "0.9.0"
crossbeam-channel = "0.5.12"
csv = "1.3.0"
deltalake = { version = "0.17.3", features = ["datafusion", "s3-native-tls"] }
derivative = "2.2.0"
differential-dataflow = { path = "./external/differential-dataflow" }
elasticsearch = "8.5.0-alpha.1"
futures = "0.3.30"
glob = "0.3.1"
hyper = { version = "0.14", features = ["server"] }
id-arena = "2.2.1"
itertools = "0.12.1"
# jemallocator = { version = "0.5.4", features = ["stats", "disable_initial_exec_tls"] }
jmespath = "0.3.0"
log = { version = "0.4.21", features = ["std"] }
libc = "0.2.158"
ndarray = { version = "0.15.6", features = ["serde"] }
nix = { version = "0.28.0", features = ["fs", "user", "resource"] }
num-integer = "0.1.46"
numpy = "0.20.0"
once_cell = "1.19.0"
opentelemetry = { version = "0.21.0", features = ["trace", "metrics"] }
opentelemetry-otlp = { version = "0.14.0", features = ["default", "tls", "tls-roots", "metrics"] }
opentelemetry-semantic-conventions = "0.13.0"
opentelemetry_sdk = { version = "0.21.2", features = ["rt-tokio", "rt-tokio-current-thread"] }
ordered-float = { version = "4.2.0", features = ["serde"] }
pipe = "0.4.0"
postgres = { version = "0.19.7", features = ["with-chrono-0_4", "with-serde_json-1"] }
prometheus-client = "0.22.2"
pyo3 = { version = "0.20.3", features = ["abi3-py310", "multiple-pymethods"] }
pyo3-asyncio = "0.20.0"
pyo3-log = "0.9.0"
rand = "0.8.5"
rdkafka = { version = "0.36.2", features = ["ssl-vendored", "cmake-build", "zstd"] }
regex = "1.10.4"
reqwest = { version = "0.12.4", features = ["blocking", "json"] }
rusqlite = { version = "0.31.0", features = ["bundled"] }
rust-s3 = { version = "0.33.0", features = ["sync-native-tls-vendored", "sync-native-tls", "fail-on-err"], default-features = false }
scopeguard = "1.2.0"
send_wrapper = "0.6.0"
serde = { version = "1.0.198", features = ["derive", "rc"] }
serde_json = "1.0"
serde_with = "3.8.0"
smallvec = { version = "1.13.2", features = ["union", "const_generics"] }
syn = { version = "2.0.60", features = ["default", "full", "visit", "visit-mut"] } # Hack to keep features unified between normal and build deps
sysinfo = "0.30.11"
tantivy = "0.22.0"
tempfile = "3.10.1"
thiserror = "1.0.59"
timely = { path = "./external/timely-dataflow/timely", features = ["bincode"] }
tokio = { version = "1.37.0", features = ["rt-multi-thread"] }
usearch = "~2.9.2" # 2.10 seems to have build problems (https://github.com/unum-cloud/usearch/issues/378)
uuid = { version = "1.8.0", features = ["v4"] }
xxhash-rust = { version = "0.8.10", features = ["xxh3"] }

[target.'cfg(target_os = "windows")'.dependencies]
winapi = "0.3.9"

[target.'cfg(target_os = "linux")'.dependencies]
inotify = "0.10.2"

[features]
unlimited-workers = []

# Helpful for using external memory profilers
standard-allocator = []

# YOLO!
yolo-id64 = []
yolo-id32 = []

[profile.dev]
opt-level = 3
debug = "line-tables-only"

[profile.profiling]
inherits = "release"
debug = "line-tables-only"

[profile.debugging]
inherits = "dev"
debug = "full"

[build-dependencies]
pyo3-build-config = "0.20.3"
